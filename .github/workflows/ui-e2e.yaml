# This workflow calls the master E2E workflow with custom variables
name: UI-E2E
run-name: ${{ github.event_name == 'workflow_dispatch' && format('Rancher-`{0}` - `{1}` destroy={2} dev={3}', inputs.rancher_version, inputs.grep_test_by_tag, inputs.destroy_runner, inputs.operator_dev_chart) || github.event_name == 'schedule' && 'UI-E2E on Rancher-latest/devel/2.10' }}

on:
  workflow_dispatch:
    inputs:
      qase_run_id:
        description: Qase run ID where the results will be reported (auto|none|existing_run_id)
        default: none
        type: string
      destroy_runner:
        description: Destroy the auto-generated self-hosted runner
        default: true
        type: boolean
      rancher_version:
        description: Rancher Manager channel/version/head_version to use for installation
        default: latest/devel/2.10
        type: string
      turtles_operator_version:
        description: Rancher Turtles operator version to test
        type: string
      grep_test_by_tag:
        description: Grep tags. For multiple selection separate with spaces. Keep always @install
        required: true
        type: string
        default: '@install @short @full'
      operator_dev_chart:
        description: Install rancher turtles dev chart
        default: true
        type: boolean
  schedule:
    - cron: '0 4 * * *'

jobs:
  ui:
    uses: ./.github/workflows/master-e2e.yaml
    secrets:
      gcp_credentials: ${{ secrets.GCP_CREDENTIALS }}
      pat_token: ${{ secrets.SELF_HOSTED_RUNNER_PAT_TOKEN }}
      aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
      azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
      azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      azure_location: ${{ secrets.AZURE_LOCATION }}
      qase_api_token: ${{ secrets.QASE_API_TOKEN }}
      rancher_password: ${{ secrets.RANCHER_PASSWORD }}
      vsphere_username: ${{ secrets.VSPHERE_USERNAME }}
      vsphere_password: ${{ secrets.VSPHERE_PASSWORD }}
      vsphere_server: ${{ secrets.VSPHERE_SERVER }}
      vsphere_secrets_json_base64: ${{ secrets.VSPHERE_SECRETS_JSON_BASE64 }}
    with:
      test_description: "CI/Manual - UI - Deployment test with Standard K3s"
      cluster_name: cluster-k3s
      destroy_runner: ${{ github.event_name == 'schedule' && true || inputs.destroy_runner }}
      capi_ui_version: dev
      rancher_version: ${{ inputs.rancher_version || 'latest/devel/2.10' }}
      qase_run_id: ${{ inputs.qase_run_id || 'auto' }}
      grep_test_by_tag: ${{ inputs.grep_test_by_tag || '@install @short' }}
      operator_dev_chart: ${{ inputs.operator_dev_chart == true || (github.event_name == 'schedule' && true) }}
      turtles_operator_version: ${{ inputs.turtles_operator_version }}

